// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`>>>A P P --- Test App +++ renders correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
    ]
  }
>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
          "flexDirection": "column-reverse",
        },
        Object {
          "backgroundColor": "#000",
        },
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        collapsable={undefined}
        pointerEvents="auto"
        style={
          Object {
            "backgroundColor": "#E9E9EF",
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "shadowColor": "black",
            "shadowOffset": Object {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0.2,
            "shadowRadius": 5,
            "top": 0,
            "transform": Array [
              Object {
                "translateX": 0,
              },
              Object {
                "translateY": 0,
              },
            ],
          }
        }
      >
        <View
          onLayout={[Function]}
          style={
            Array [
              Object {
                "flex": 1,
              },
            ]
          }
        >
          <View
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            style={
              Array [
                Object {
                  "flex": 1,
                  "flexDirection": "column-reverse",
                },
                Object {
                  "backgroundColor": "#000",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={undefined}
                pointerEvents="auto"
                style={
                  Object {
                    "backgroundColor": "#E9E9EF",
                    "bottom": 0,
                    "left": 0,
                    "opacity": 1,
                    "position": "absolute",
                    "right": 0,
                    "shadowColor": "black",
                    "shadowOffset": Object {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0.2,
                    "shadowRadius": 5,
                    "top": 0,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateY": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  style={
                    Object {
                      "borderBottomWidth": 0,
                      "borderColor": "#ddd",
                      "borderRadius": 2,
                      "borderWidth": 1,
                      "elevation": 1,
                      "marginLeft": 5,
                      "marginRight": 5,
                      "marginTop": 10,
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 2,
                        "width": 0,
                      },
                      "shadowOpacity": 0.1,
                      "shadowRadius": 2,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#fff",
                          "borderBottomWidth": 1,
                          "borderColor": "#ddd",
                          "flexDirection": "row",
                          "justifyContent": "flex-start",
                          "padding": 5,
                          "position": "relative",
                        },
                        undefined,
                      ]
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "flex": 1,
                          "flexDirection": "row",
                          "height": 40,
                        }
                      }
                    >
                      <Text
                        accessible={true}
                        allowFontScaling={true}
                        ellipsizeMode="tail"
                        style={
                          Object {
                            "flex": 1,
                            "fontSize": 18,
                            "paddingLeft": 20,
                          }
                        }
                      >
                        Email
                      </Text>
                      <TextInput
                        allowFontScaling={true}
                        autoCapitalize="none"
                        autoCorrect={false}
                        onChangeText={[Function]}
                        placeholder="email@gmail.com"
                        secureTextEntry={undefined}
                        style={
                          Object {
                            "color": "#000",
                            "flex": 2,
                            "fontSize": 18,
                            "lineHeight": 23,
                            "paddingLeft": 5,
                            "paddingRight": 5,
                          }
                        }
                        value=""
                      />
                    </View>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#fff",
                          "borderBottomWidth": 1,
                          "borderColor": "#ddd",
                          "flexDirection": "row",
                          "justifyContent": "flex-start",
                          "padding": 5,
                          "position": "relative",
                        },
                        undefined,
                      ]
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "flex": 1,
                          "flexDirection": "row",
                          "height": 40,
                        }
                      }
                    >
                      <Text
                        accessible={true}
                        allowFontScaling={true}
                        ellipsizeMode="tail"
                        style={
                          Object {
                            "flex": 1,
                            "fontSize": 18,
                            "paddingLeft": 20,
                          }
                        }
                      >
                        Password
                      </Text>
                      <TextInput
                        allowFontScaling={true}
                        autoCapitalize={undefined}
                        autoCorrect={false}
                        onChangeText={[Function]}
                        placeholder="password"
                        secureTextEntry={true}
                        style={
                          Object {
                            "color": "#000",
                            "flex": 2,
                            "fontSize": 18,
                            "lineHeight": 23,
                            "paddingLeft": 5,
                            "paddingRight": 5,
                          }
                        }
                        value=""
                      />
                    </View>
                  </View>
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Object {
                        "alignSelf": "center",
                        "color": "red",
                        "fontSize": 20,
                      }
                    }
                  >
                    
                  </Text>
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#fff",
                          "borderBottomWidth": 1,
                          "borderColor": "#ddd",
                          "flexDirection": "row",
                          "justifyContent": "flex-start",
                          "padding": 5,
                          "position": "relative",
                        },
                        undefined,
                      ]
                    }
                  >
                    <View
                      accessibilityComponentType={undefined}
                      accessibilityLabel={undefined}
                      accessibilityTraits={undefined}
                      accessible={true}
                      collapsable={undefined}
                      hasTVPreferredFocus={undefined}
                      hitSlop={undefined}
                      isTVSelectable={true}
                      nativeID={undefined}
                      onLayout={undefined}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignSelf": "stretch",
                          "backgroundColor": "#fff",
                          "borderColor": "#007aff",
                          "borderRadius": 5,
                          "borderWidth": 1,
                          "flex": 1,
                          "marginLeft": 5,
                          "marginRight": 5,
                          "opacity": 1,
                        }
                      }
                      testID={undefined}
                      tvParallaxProperties={undefined}
                    >
                      <Text
                        accessible={true}
                        allowFontScaling={true}
                        ellipsizeMode="tail"
                        style={
                          Object {
                            "alignSelf": "center",
                            "color": "#007aff",
                            "fontSize": 16,
                            "fontWeight": "600",
                            "paddingBottom": 10,
                            "paddingTop": 10,
                          }
                        }
                      >
                        Login
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              cardStyle={undefined}
              collapsable={undefined}
              getScreenDetails={[Function]}
              headerMode={undefined}
              index={0}
              layout={
                Object {
                  "height": 0,
                  "initHeight": 0,
                  "initWidth": 0,
                  "isMeasured": false,
                  "width": 0,
                }
              }
              leftInterpolator={[Function]}
              mode="float"
              navigation={
                Object {
                  "dispatch": [Function],
                  "goBack": [Function],
                  "navigate": [Function],
                  "setParams": [Function],
                  "state": Object {
                    "index": 0,
                    "key": "Init-id-1519030882078-1",
                    "params": Object {
                      "hideNavBar": true,
                      "init": true,
                    },
                    "routeName": "auth",
                    "routes": Array [
                      Object {
                        "key": "Init-id-1519030882078-0",
                        "params": Object {
                          "hideNavBar": false,
                          "init": true,
                          "title": "Please Login",
                        },
                        "routeName": "login",
                      },
                    ],
                  },
                }
              }
              rightInterpolator={[Function]}
              router={
                Object {
                  "getActionForPathAndParams": [Function],
                  "getComponentForRouteName": [Function],
                  "getComponentForState": [Function],
                  "getPathAndParamsForState": [Function],
                  "getScreenConfig": [Function],
                  "getScreenOptions": [Function],
                  "getStateForAction": [Function],
                }
              }
              titleInterpolator={[Function]}
              transitionConfig={undefined}
            >
              <View
                collapsable={undefined}
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "#F7F7F7",
                    "borderBottomColor": "rgba(0, 0, 0, .3)",
                    "borderBottomWidth": 0.5,
                    "height": 64,
                    "paddingBottom": 0,
                    "paddingLeft": 0,
                    "paddingRight": 0,
                    "paddingTop": 20,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        },
                        Object {
                          "flexDirection": "row",
                        },
                      ]
                    }
                  >
                    <View
                      collapsable={undefined}
                      pointerEvents="box-none"
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "bottom": 0,
                          "justifyContent": "center",
                          "left": 0,
                          "opacity": 1,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                          "transform": Array [
                            Object {
                              "translateX": 0,
                            },
                          ],
                        }
                      }
                    >
                      <Text
                        accessibilityTraits="header"
                        accessible={true}
                        allowFontScaling={true}
                        collapsable={undefined}
                        ellipsizeMode="tail"
                        numberOfLines={1}
                        onLayout={[Function]}
                        style={
                          Object {
                            "color": "rgba(0, 0, 0, .9)",
                            "fontSize": 17,
                            "fontWeight": "600",
                            "marginHorizontal": 16,
                            "textAlign": "center",
                          }
                        }
                      >
                        Please Login
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
